1. Якщо використати метод для сутності за межею сесії, то буде помилка.
2. Каскадні операції є досить важливими, оскільки взаємодія із батьком впливатиме на дитину (каскадна дія). Наприклад,
при каскадному додаванні, не потрібно викликати метод persist для дочірніх обʼєктів, але при цьому потрібно встановлювати
звʼязки як завжди.
3. Параметр "orphanRemoval". Якщо відлінкувати дитину від батька, то автоматично видаляється з БД. А при "Cascade Remove"
при видаленні батька видаляється дитина.
4. Обмеження-аргументи впливають на генерацію (DDL) і деколи навіть на запити до БД (DML). У загальному частина анотацій
відноситься до DDL та до DML, тобто якщо різниця між обмеженнями в Java та DB є різними, то лише DB буде створювати
помилки за потреби. Можна додати валідатори, щоб впливало із Java коду та генерувало помилки.
5. Ефективна робота - це робота на стороні дитини.
